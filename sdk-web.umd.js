(function(u,p){typeof exports=="object"&&typeof module<"u"?p(exports):typeof define=="function"&&define.amd?define(["exports"],p):(u=typeof globalThis<"u"?globalThis:u||self,p(u.SdkWeb=u.SdkWeb||{}))})(this,function(u){"use strict";var ge=Object.defineProperty;var de=(u,p,f)=>p in u?ge(u,p,{enumerable:!0,configurable:!0,writable:!0,value:f}):u[p]=f;var B=(u,p,f)=>(de(u,typeof p!="symbol"?p+"":p,f),f);const p={alpha:{basedDomain:"https://miniapp-web.vissoft.vn"},production:{basedDomain:"https://api23.vtmoney.vn"},uat:{basedDomain:"https://api24cdn.vtmoney.vn/uatmm"},staging:{basedDomain:"http://localhost:20000"}},f={initKeyChainUrl:"/webappv2/miniapp-be/public/api/v1/dh/initiate",exchangeKeySecretUrl:"/webappv2/miniapp-be/public/api/v1/dh/exchange",loginAnonymousUrl:"/webappv2/miniapp-be/public/api/v1/auth/login/anonymous"},N="/webappv2/miniapp-be/public/api/v1/msisdn/white-list",K="/webappv2/miniapp-be/public/api/v1/grant-partner/partner-link",U="MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgG7/RewAH18PBkJyz85hh1KD1AWPKcJTZ/xGW/ffx7l+hRANCAAQfx1YBNGBlMvf//5h6Yjuhu7/VrmZ5LvS4fe9NPwKxptml3OwOxUtzH/m6ICS3yE/iZoKMyG+mKWNr/u7wTMRt",_={productMode:p,encryptExchangeEndPoint:f,getEnvUrl:N,getPartnerLinkUrl:K,secretDigitalSignature:U};class V{constructor(){this.store={}}getItem(e){return this.store[e]||null}setItem(e,t){this.store[e]=t.toString()}removeItem(e){delete this.store[e]}clear(){this.store={}}logLocalStorage(){return this.store}}const g=new V,m=class m{static generateIMEI(){let e="";for(let o=0;o<14;o++)e+=Math.floor(Math.random()*10).toString();let t=0;for(let o=0;o<14;o++){let s=parseInt(e[o]);o%2===0&&(s*=2,s>9&&(s-=9)),t+=s}const n=(10-t%10)%10;return e+=n.toString(),e}static getEnv(){let e=g.getItem("MINIAPP_SDK_sdk_productMode");return e=e!==""?e:"staging",{productMode:p[e],encryptExchangeEndPoint:f,secretDigitalSignature:U,getPartnerLinkUrl:K,getEnvUrl:N}}static getUserInformation(){try{const e=g.getItem("MINIAPP_SDK_user_information"),t=e?JSON.parse(e):"";if(t!=="")return t==null?void 0:t.auth}catch{return""}}static async checkKeyExist(e,t){const n=g.getItem("MINIAPP_SDK_serverKey_"+e),o=g.getItem("MINIAPP_SDK_userClientKey_"+e);return g.getItem("MINIAPP_SDK_imei_component")===t&&n!==""&&(n==null?void 0:n.shareKey)!==""&&o!==""&&(o==null?void 0:o.privateKey)!==""&&(o==null?void 0:o.publicKey)!==""}static sanitizeUrl(e){return/^[a-zA-Z-_]+:/.test(e)||(e="http://"+e),e.toLowerCase()}static extractOrigin(e){const t=/^[A-Za-z][A-Za-z0-9+\-.]+:(\/\/)?[^/]*/.exec(e);return t===null?"":t[0]}static formatPhoneNumber(e){let t=e.slice(0,1),n=e.slice(1,e.length);return t==="0"?"84"+n:e}static generateResponseId(){return"APP_"+Date.now()}static uuidNextVal(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=Math.random()*16|0;return(e==="x"?t:t&3|8).toString(16)}).toUpperCase()}static convertStringToJson(e){try{return JSON.parse(e)}catch{return e}}static convertJsonToString(e){try{return JSON.stringify(e)}catch{return e}}static convertDataToSign(e){try{const t=JSON.stringify(e);return btoa(t)}catch{return e}}static paginate(e,t,n){return e.slice((n-1)*t,n*t)}static filterString(e,t,n){const o=this.convertViToEn(t),s=this.convertViToEn(n),a=this.convertViToEn(e).split(" ");let i=!0;return o.length<=0?!1:(a.length>0&&a.forEach(c=>{if(!(o.indexOf(c)!==-1||s.indexOf(c)!==-1)){i=!1;return}}),i)}static convertViToEn(e,t=!1){return e=e.toLowerCase(),e=e.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,"a"),e=e.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,"e"),e=e.replace(/ì|í|ị|ỉ|ĩ/g,"i"),e=e.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,"o"),e=e.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,"u"),e=e.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,"y"),e=e.replace(/đ/g,"d"),e=e.replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g,""),e=e.replace(/\u02C6|\u0306|\u031B/g,""),e=e.replace(/  +/g," "),e=e.replace(/[^a-zA-Z0-9 ]/g,""),t?e.toUpperCase():e}static filterMsisdnByEnv(e,t,n){let o="production";return n.length>0&&n.filter(a=>e===a).length>0?(o="staging",o):(t.length>0&&t.filter(a=>e===a).length&&(o="uat"),o)}static getDeviceInfo(){var o,s,a,i,c;const e=navigator.userAgent||navigator.vendor||window.opera;let t="Unknown",n="Unknown";return/windows nt 10.0/i.test(e)?(t="Windows",n="10"):/windows nt 11.0/i.test(e)?(t="Windows",n="11"):/macintosh|mac os x/i.test(e)?(t="macOS",n=((s=(o=e.match(/Mac OS X (\d+[_\d]*)/))==null?void 0:o[1])==null?void 0:s.replace(/_/g,"."))||"Unknown"):/android/i.test(e)?(t="Android",n=((a=e.match(/Android\s([0-9.]*)/))==null?void 0:a[1])||"Unknown"):/iphone|ipad/i.test(e)?(t="iOS",n=((c=(i=e.match(/OS (\d+[_\d]+)/))==null?void 0:i[1])==null?void 0:c.replace(/_/g,"."))||"Unknown"):/linux/i.test(e)&&(t="Linux",n="Unknown"),{os:t,osVersion:n}}static async generateClientId(e){if(console.log("🔍 [DEBUG] generateClientId called with partnerLink"),!e)throw console.warn("⚠️ [DEBUG] partnerLink is required"),new Error("partnerLink is required");try{const t=`partner_${e}`;console.log("🔍 [DEBUG] Using partnerKey:",t);let n=await m.getClientIdFromIndexedDB(t);if(console.log("🔍 [DEBUG] Retrieved clientId for partner"),n)console.log("🔍 [DEBUG] Using existing clientId for partner");else{console.log("🔍 [DEBUG] No existing clientId found for partner, creating new one...");const o=Date.now(),s=Math.floor(Math.random()*1e4);n=`PARTNER_${btoa(e).substring(0,8)}_${o}_${s}`,console.log("🔍 [DEBUG] Generated new clientId for partner"),await m.saveClientIdToIndexedDB(n,t),console.log("🔍 [DEBUG] Saved clientId successfully for partner")}return n}catch(t){return console.warn("⚠️ [DEBUG] Storage error, using fallback:",t),m.generateClientIdFallback(e)}}static async saveClientIdToIndexedDB(e,t="device_client_id"){return console.log("🔍 [DEBUG] saveClientIdToIndexedDB called with key:",t),new Promise((n,o)=>{if(!window.indexedDB){console.warn("⚠️ [DEBUG] Storage not supported"),o(new Error("Storage not supported"));return}const s=indexedDB.open("SDKStorage",1);s.onerror=()=>{console.warn("⚠️ [DEBUG] Storage open error:",s.error),o(s.error)},s.onsuccess=()=>{try{const l=s.result.transaction(["clientData"],"readwrite").objectStore("clientData").put({key:t,value:e});l.onsuccess=()=>{console.log("✅ [DEBUG] Successfully saved clientId for key:",t),n()},l.onerror=()=>{console.warn("⚠️ [DEBUG] Storage save error:",l.error),o(l.error)}}catch(a){console.warn("⚠️ [DEBUG] Storage transaction error:",a),o(a)}},s.onupgradeneeded=a=>{try{const i=a.target.result;i.objectStoreNames.contains("clientData")||(i.createObjectStore("clientData",{keyPath:"key"}),console.log("🔍 [DEBUG] Created storage objectStore"))}catch(i){console.warn("⚠️ [DEBUG] Storage upgrade error:",i),o(i)}},setTimeout(()=>{console.warn("⚠️ [DEBUG] Storage timeout"),o(new Error("Storage timeout"))},5e3)})}static async getClientIdFromIndexedDB(e="device_client_id"){return console.log("🔍 [DEBUG] getClientIdFromIndexedDB called with key:",e),new Promise((t,n)=>{if(!window.indexedDB){console.warn("⚠️ [DEBUG] Storage not supported, returning null"),t(null);return}const o=indexedDB.open("SDKStorage",1);o.onerror=()=>{console.warn("⚠️ [DEBUG] Storage open error:",o.error),t(null)},o.onsuccess=()=>{try{const c=o.result.transaction(["clientData"],"readonly").objectStore("clientData").get(e);c.onsuccess=()=>{const l=c.result?c.result.value:null;console.log("🔍 [DEBUG] Retrieved clientId for key:",e),t(l)},c.onerror=()=>{console.warn("⚠️ [DEBUG] Storage get error:",c.error),t(null)}}catch(s){console.warn("⚠️ [DEBUG] Storage transaction error:",s),t(null)}},o.onupgradeneeded=s=>{try{const a=s.target.result;a.objectStoreNames.contains("clientData")||(a.createObjectStore("clientData",{keyPath:"key"}),console.log("🔍 [DEBUG] Created storage objectStore"))}catch(a){console.warn("⚠️ [DEBUG] Storage upgrade error:",a),t(null)}},setTimeout(()=>{console.warn("⚠️ [DEBUG] Storage timeout, returning null"),t(null)},3e3)})}static generateClientIdFallback(e=null){if(console.log("🔍 [DEBUG] generateClientIdFallback called with partnerLink:",e),!e){let o=g.getItem("device_client_id");if(console.log("🔍 [DEBUG] Retrieved clientId from fallback (legacy)"),o)console.log("🔍 [DEBUG] Using existing clientId from fallback (legacy)");else{console.log("🔍 [DEBUG] No existing clientId found, creating new one...");const s=Date.now(),a=Math.floor(Math.random()*1e4);o=`DEVICE_${s}_${a}`,console.log("🔍 [DEBUG] Generated new clientId in fallback (legacy)"),g.setItem("device_client_id",o),console.log("🔍 [DEBUG] Saved clientId successfully (legacy)")}return o}const t=`partner_${e}`;let n=g.getItem(t);if(console.log("🔍 [DEBUG] Retrieved clientId from fallback for partner"),n)console.log("🔍 [DEBUG] Using existing clientId from fallback for partner");else{console.log("🔍 [DEBUG] No existing clientId found for partner, creating new one...");const o=Date.now(),s=Math.floor(Math.random()*1e4);n=`PARTNER_${btoa(e).substring(0,8)}_${o}_${s}`,console.log("🔍 [DEBUG] Generated new clientId in fallback for partner"),g.setItem(t,n),console.log("🔍 [DEBUG] Saved clientId successfully for partner")}return n}static checkIndexedDBSupport(){if(!window.indexedDB)return!1;const e=navigator.userAgent.toLowerCase();return/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e)&&(/safari/.test(e)&&/iphone|ipad|ipod/.test(e)||/chrome/.test(e)&&/android/.test(e)),!0}};B(m,"defaultResponseToWebview",{sender:"MINIAPP_SDK",response_id:"",request_id:"",event:"",data:"",token:""}),B(m,"defaultResponseToWebview",{sender:"MINIAPP_SDK",response_id:"",request_id:"",event:"",data:"",token:""});let d=m;const C="http://125.235.38.229:8080/webappv2/miniapp-be/public/api/v1",L=async r=>{try{const e=await fetch(`${C}/auth/login`,{method:"POST",headers:{Connection:"keep-alive","Partner-Link":"SFVFU19IVUVTX0hPTUU=","Accept-Language":"vi","User-Agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) SFive/80.0 Chrome/80.0.3987.123 Safari/537.36","Order-Id":"202408130946","Content-Type":"application/json",Accept:"application/json, text/plain, */*","Device-Id":"water-deviceId",imei:r.imei,Os:r.os,Origin:"http://125.235.38.229:8080",Referer:"http://125.235.38.229:8080/webappv2/miniapp-fe/?partner_link=SFVFU19IVUVTX0hPTUU%3D&mock=true"},body:JSON.stringify(r)});if(!e.ok){const t=await e.json();throw new Error(t.error||"Login failed")}return await e.json()}catch(e){throw e}},O=async r=>{try{const e=await fetch(`${C}/auth/login/verify-otp`,{method:"POST",headers:{Connection:"keep-alive","Partner-Link":"SFVFU19IVUVTX0hPTUU=","Accept-Language":"vi","User-Agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) SFive/80.0 Chrome/80.0.3987.123 Safari/537.36","Order-Id":"202408130946","Content-Type":"application/json",Accept:"application/json, text/plain, */*","Device-Id":"water-deviceId",imei:"33abdab5-83hg-1122-a88a-b98c56b123th",Os:"android",Origin:"http://125.235.38.229:8080",Referer:"http://125.235.38.229:8080/webappv2/miniapp-fe/?partner_link=SFVFU19IVUVTX0hPTUU%3D&mock=true"},body:JSON.stringify(r)});if(!e.ok){const t=await e.json();throw new Error(t.error||"OTP verification failed")}return await e.json()}catch(e){throw e}};async function R(r,e){try{const t=BigInt("0x"+r),n=BigInt("0x"+e),o=crypto.getRandomValues(new Uint8Array(256)),s=BigInt("0x"+Array.from(o).map(l=>l.toString(16).padStart(2,"0")).join(""))%(t-1n),a=G(n,s,t),i=v(a),c=v(s);return{privateKeyHex:s.toString(16),publicKeyHex:a.toString(16),clientPrivateKeyBase64:w(c),clientPublicKeyBase64:w(i),privateKeyBigInt:s,publicKeyBigInt:a}}catch(t){throw console.error("Lỗi khi tạo cặp khóa DH:",t),t}}function w(r){try{const e=new Uint8Array(r);let t="";for(let n=0;n<e.byteLength;n++)t+=String.fromCharCode(e[n]);return window.btoa(t)}catch(e){throw console.error("Error converting ArrayBuffer to base64:",e),new Error("Error converting to base64")}}async function H(r,e,t){const n=BigInt("0x"+t),o=Uint8Array.from(atob(r),y=>y.charCodeAt(0)),s=BigInt("0x"+Array.from(o).map(y=>y.toString(16).padStart(2,"0")).join("")),a=Uint8Array.from(atob(e),y=>y.charCodeAt(0)),i=BigInt("0x"+Array.from(a).map(y=>y.toString(16).padStart(2,"0")).join("")),c=G(s,i,n);return w(v(c))}function G(r,e,t){if(t===1n)return 0n;let n=1n;for(r=r%t;e>0n;)e%2n===1n&&(n=n*r%t),r=r*r%t,e=e/2n;return n}function v(r){const e=r.toString(16).padStart(2,"0"),t=new Uint8Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=parseInt(e.substr(n,2),16);return t}async function W(r,e){try{if(!r||!e)throw new Error("Invalid input: plain data or key is missing");const n=new TextEncoder().encode(r),o=Uint8Array.from(atob(e),M=>M.charCodeAt(0)),s=12,a=16,i=await crypto.subtle.digest("SHA-256",o),c=await crypto.subtle.importKey("raw",i,{name:"AES-GCM"},!1,["encrypt"]),l=crypto.getRandomValues(new Uint8Array(s)),y=await crypto.subtle.encrypt({name:"AES-GCM",iv:l,tagLength:128},c,n),D=new Uint8Array(l.length+y.byteLength);return D.set(l,0),D.set(new Uint8Array(y),l.length),btoa(String.fromCharCode(...D))}catch(t){throw console.error("Encryption failed with error:",t),t}}async function q(r,e){try{if(!(r!=null&&r.encrypted)||!e)throw new Error("Dữ liệu mã hóa hoặc khóa bị thiếu");const t=12,n=16,o=Uint8Array.from(atob(r.encrypted),E=>E.charCodeAt(0)),s=Uint8Array.from(atob(e),E=>E.charCodeAt(0)),a=await crypto.subtle.digest("SHA-256",s),i=await crypto.subtle.importKey("raw",a,{name:"AES-GCM"},!1,["decrypt"]),c=o.slice(0,t),l=o.slice(t),y=await crypto.subtle.decrypt({name:"AES-GCM",iv:c},i,l);return new TextDecoder().decode(y)}catch(t){throw console.error("Giải mã thất bại:",t),t instanceof DOMException&&console.error("Lỗi thao tác crypto:",t.name),t}}class j{constructor(){this.keyStorage=new Map}async genDhKeyFromServer(e,t){var o,s;if(e===""||e===void 0)return"";let n="";try{const{clientPrivateKey:a,clientPublicKey:i,clientPrivateKeyBase64:c,clientPublicKeyBase64:l,privateKeyBigInt:y,publicKeyBigInt:D}=await R(e.p,e.g);n="GEN_KEY_CLIENT";let E=await J(l,t);if(E!==""&&((o=E==null?void 0:E.status)==null?void 0:o.code)==="00"){g.setItem("MINIAPP_SDK_userClientKey_"+(t==null?void 0:t.username),JSON.stringify({privateKey:a,publicKey:i,privateKeyBase64:c,publicKeyBase64:l})),n="EXCHANGE_PUB_KEY";let M=await H(e.publicKey,c,e.p),k=e;k.shareKey=M,g.setItem("MINIAPP_SDK_serverKey_"+(t==null?void 0:t.username),JSON.stringify(k)),n="SAVE_SHARE_KEY"}else return(s=E==null?void 0:E.status)==null?void 0:s.code;return n}catch(a){return console.error("Lỗi trong genDhKeyFromServer:",a),""}}async encryptData(e){const t=d.convertJsonToString(e),n=d.getUserInformation(),o=JSON.parse(g.getItem("MINIAPP_SDK_serverKey_"+(n==null?void 0:n.username)));return o!==""&&(o==null?void 0:o.shareKey)!==""?W(t,o==null?void 0:o.shareKey).then(async s=>{if(s!==""){const a=await Y(s);return{data:{encrypted:s,signature:a},token:n==null?void 0:n.accessToken,eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}}}return""}):""}async decryptData(e){const t=d.getUserInformation(),n=JSON.parse(g.getItem("MINIAPP_SDK_serverKey_"+(t==null?void 0:t.username)));let o={},s={errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"};return n!==""&&(n==null?void 0:n.shareKey)!==""?await q(e,n==null?void 0:n.shareKey).then(a=>{if(a===""||a.toLowerCase().indexOf("error:1e000065")>=0)return o.data="",o.eventStatus={errorCode:"SDK340",errorMessageVN:"Lỗi giải mã do vấn đề hệ thống",errorMessageEN:"System-related decryption error"},a;let i=d.convertStringToJson(a);return o.data=i,o.eventStatus=s,a}).catch(()=>{o.data="",o.eventStatus={errorCode:"SDK340",errorMessageVN:"Lỗi giải mã do vấn đề hệ thống",errorMessageEN:"System-related decryption error"}}):(o.data="",o.eventStatus={errorCode:"SDK301",errorMessageVN:"Lỗi không tìm thấy khóa giải mã",errorMessageEN:"Decryption key not found error"}),o.token=t==null?void 0:t.accessToken,o}async callApiExchangeKey(e,t){if(!t)return"";try{const n=d.getEnv(),o=await fetch(`${n.productMode.basedDomain}${n.encryptExchangeEndPoint.exchangeKeySecretUrl}`,{method:"POST",headers:{accept:"application/json","Access-Control-Allow-Origin":"*",Authorization:`Bearer ${t==null?void 0:t.accessToken}`,"Content-Type":"application/json","X-Anonymous-Imei":t==null?void 0:t.imei},body:JSON.stringify({publicKey:e})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}catch(n){return console.error("Lỗi trong callApiExchangeKey:",n),""}}async callApiLoginAnonymous(e){var s;console.log("🔍 [DEBUG] loginData:",e);const t={},n=(s=e.data)==null?void 0:s.partnerLink;console.log("🔍 [DEBUG] Retrieved partnerLink for loginAnonymous:",n),t.imei=await d.generateClientId(n);const o=d.getDeviceInfo();t.os=o.os,t.osVersion=o.osVersion,t.partnerLink=n;try{const a=d.getEnv(),i=await fetch(`${a.productMode.basedDomain}${a.encryptExchangeEndPoint.loginAnonymousUrl}`,{method:"POST",headers:{accept:"application/json","Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify(t)});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);return await i.json()}catch(a){return console.error("Lỗi trong callApiExchangeKey:",a),""}}async encryptWithKey(e,t){const o=new TextEncoder().encode(e),s=await window.crypto.subtle.importKey("raw",new TextEncoder().encode(t),{name:"AES-GCM"},!1,["encrypt"]),a=window.crypto.getRandomValues(new Uint8Array(12)),i=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:a},s,o),c=new Uint8Array(i),l=new Uint8Array(a.length+c.length);return l.set(a),l.set(c,a.length),btoa(String.fromCharCode(...l))}async decryptWithKey(e,t){try{const n=new Uint8Array(atob(e).split("").map(c=>c.charCodeAt(0))),o=n.slice(0,12),s=n.slice(12),a=await window.crypto.subtle.importKey("raw",new TextEncoder().encode(t),{name:"AES-GCM"},!1,["decrypt"]),i=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:o},a,s);return new TextDecoder().decode(i)}catch(n){return console.error("Lỗi trong decryptWithKey:",n),""}}async generateSign(e){try{const t=await this.getKeyConfig();if(!t)return"";const n=Uint8Array.from(atob(t),c=>c.charCodeAt(0)).buffer,o=await crypto.subtle.importKey("pkcs8",n,{name:"ECDSA",namedCurve:"P-256"},!1,["sign"]),s=await crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-256"}},o,new TextEncoder().encode(e)),a=Z(new Uint8Array(s));return btoa(String.fromCharCode(...a))}catch(t){return console.error("Lỗi signature",t),""}}async saveClientKeys(e,t){this.keyStorage.set(`client_${e}`,t)}async getClientKeys(e){return this.keyStorage.get(`client_${e}`)}async saveServerKeys(e,t){this.keyStorage.set(`server_${e}`,t)}async getServerKeys(e){return this.keyStorage.get(`server_${e}`)}async getKeyConfig(){return this.keyStorage.get("key_config")||_.secretDigitalSignature}async getUserInformation(){return this.keyStorage.get("user_info")||null}async getEnv(){return _}async getEnvWhitelist(){try{const e=await this.getEnv(),t=await fetch(`${e.productMode.basedDomain}${e.getEnvUrl}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const n=await t.json();return(n==null?void 0:n.data)||""}catch(e){return console.error("Lỗi khi lấy danh sách whitelist:",e),""}}async initSDK(e="staging"|"production"|"uat"|"alpha"){if(!e)throw new Error("Environment parameter is required");g.setItem("MINIAPP_SDK_sdk_productMode",e)}}const S=new j,$=()=>S.getEnv(),F=()=>S.getEnvWhitelist(),J=(r,e)=>S.callApiExchangeKey(r,e),Y=r=>S.generateSign(r),X=r=>S.initSDK(r),Z=r=>{const e=r.slice(0,32),t=r.slice(32),n=P(e),o=P(t),s=n.length+o.length;return Uint8Array.from([48,s,...n,...o])},z=r=>{let e=0;for(;e<r.length-1&&r[e]===0;)e++;return r.slice(e)},P=r=>(r=z(r),r[0]&128&&(r=Uint8Array.from([0,...r])),Uint8Array.from([2,r.length,...r])),x=async r=>{var n,o,s,a;const e=await d.checkKeyExist((o=(n=r==null?void 0:r.data)==null?void 0:n.auth)==null?void 0:o.username,(a=(s=r==null?void 0:r.data)==null?void 0:s.auth)==null?void 0:a.imei);let t=await Q(r);if(e)return t;{const i=await b();console.log("genKeyProgress",i);let c={errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"};return i===""||i==="MNA0012"?c={errorCode:"MNA0012",errorMessageVN:"Có lỗi xảy ra trong quá trình tạo DH key.",errorMessageEN:"DH key error"}:i==="MNA0010"?c={errorCode:"MNA0010",errorMessageVN:"Diffie-Hellman không tồn tại.",errorMessageEN:"DH key not exist"}:i==="MNA0011"&&(c={errorCode:"MNA0011",errorMessageVN:"Diffie-Hellman hết hạn, cần khởi tạo lại.",errorMessageEN:"DH key need to be refreshed"}),t.eventStatus=c,t}};async function Q(r){console.log("🔍 [DEBUG] executeLoginSuccess called",r);const e={sender:"MINIAPP_SDK",response_id:"",request_id:"",event:"",data:"",token:""};e.request_id=r==null?void 0:r.request_id,console.log("🔍 [DEBUG] Extracted msisdn"),e.response_id=d.uuidNextVal(),console.log("🔍 [DEBUG] Generated response_id"),e.event=r==null?void 0:r.event,e.sender="MINIAPP_SDK";let t={errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"};try{return g.setItem("MINIAPP_SDK_user_information",JSON.stringify(r==null?void 0:r.data)),e.data=r==null?void 0:r.data,e.eventStatus=t,console.log("🔍 [DEBUG] executeLoginSuccess completed successfully"),e}catch(n){return console.error("❌ [DEBUG] executeLoginSuccess error:",n),t.errorCode="SDK010",t.errorMessageVN="Lỗi chung trong quá trình đăng nhập",t.errorMessageEN="General login error",e.eventStatus=t,e}}async function b(){const r=d.getUserInformation(),e=d.getEnv();if(console.log("🔍 [DEBUG] userInfo:",r),console.log("🔍 [DEBUG] env:",e),r!==""){const t=e.productMode.basedDomain+e.encryptExchangeEndPoint.initKeyChainUrl,n={Authorization:"Bearer "+(r==null?void 0:r.accessToken),"X-Anonymous-Imei":r==null?void 0:r.imei};try{const o=await fetch(t,{method:"GET",headers:n});if(console.log("🔍 [DEBUG] response:",o),!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const s=await o.json();if(console.log("🔍 [DEBUG] genKeyCrypt response received"),s!==""){const a=await S.genDhKeyFromServer(s==null?void 0:s.data,r);return console.log("🔍 [DEBUG] responseGenKeyDH completed"),a}return""}catch(o){return console.log(o),""}}return""}async function ee(r){console.log("🔍 [DEBUG] clearSessionEvent called");const e=d.defaultResponseToWebview;e.request_id=(r==null?void 0:r.request_id)||"",e.response_id=d.uuidNextVal(),e.event=(r==null?void 0:r.event)||"CLEAR_SESSION",e.sender="MINIAPP_SDK";let t={errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"};return e.eventStatus=t,g.removeItem("MINIAPP_SDK_user_information"),e}async function te(r){console.log("🔍 [DEBUG] exchangeKey called with data:",r);let e={sender:"MINIAPP_SDK",response_id:d.uuidNextVal(),request_id:r==null?void 0:r.request_id,event:"EXCHANGE_KEY",data:"",eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}};try{const t=await b();console.log("🔍 [DEBUG] genKeyProgress:",t);let n={errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"};return t===""||t==="MNA0012"?(n={errorCode:"MNA0012",errorMessageVN:"Có lỗi xảy ra trong quá trình tạo DH key.",errorMessageEN:"DH key error"},console.error("❌ [DEBUG] DH key error:",n)):t==="MNA0010"?(n={errorCode:"MNA0010",errorMessageVN:"Diffie-Hellman không tồn tại.",errorMessageEN:"DH key not exist"},console.error("❌ [DEBUG] DH key not exist:",n)):t==="MNA0011"?(n={errorCode:"MNA0011",errorMessageVN:"Diffie-Hellman hết hạn, cần khởi tạo lại.",errorMessageEN:"DH key need to be refreshed"},console.error("❌ [DEBUG] DH key need to be refreshed:",n)):console.log("✅ [DEBUG] DH key exchange successful"),e.eventStatus=n,e.eventStatus.errorCode!=="SDK000"&&(console.warn("⚠️ [DEBUG] Clearing localStorage due to error:",e.eventStatus),g.clear()),console.log("🔍 [DEBUG] exchangeKey response:",e),e}catch(t){return console.error("❌ [DEBUG] exchangeKey exception:",t),e.eventStatus={errorCode:"SDK999",errorMessageVN:"Lỗi không xác định trong exchangeKey",errorMessageEN:"Unknown error in exchangeKey"},e}}const re=async r=>{const e=await S.callApiLoginAnonymous(r);if(console.log("🔍 [DEBUG] response:",e),e.status.code==="00"){const t=r;t.data={auth:{accessToken:e.data.accessToken,username:e.data.username,twofaChannelType:e.data.twofaChannelType,twofaChannelValue:e.data.twofaChannelValue,imei:e.data.imei},accInfo:{}};const n=await x(t);return console.log("🔍 [DEBUG] loginSuccess:",n),n}return null};function ne(r){console.log("🔍 [DEBUG] closeMiniApp called with data:",r);const e="miniapp-container",t=document.getElementById(e);if(!t)return console.log("❌ Container not found"),{data:null,eventStatus:{errorCode:"SDK001",errorMessageVN:"Container không tìm thấy",errorMessageEN:"Container not found"}};try{const n=document.getElementById("iframe-miniapp");return n?(t.removeChild(n),t.style.display="none",console.log("✅ MiniApp closed successfully"),{data:{containerId:e,closed:!0},eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}}):(console.log("⚠️ No iframe to close"),{data:{containerId:e,closed:!1,message:"No iframe to close"},eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}})}catch(n){return console.error("❌ Error in closeMiniApp:",n),{data:null,eventStatus:{errorCode:"SDK003",errorMessageVN:"Lỗi khi đóng MiniApp",errorMessageEN:"Error closing MiniApp"}}}}const oe={LOGIN:async r=>{const e=await L(r),t={otp:"1111",requestId:(e==null?void 0:e.data.requestId)||"01HZM4PZV4G40XPY5CCKHZAFMW"};return e.status.code==="MNA0302"?e:await O(t)},LOGIN_SUCCESS:async r=>await x(r),ENCRYPT_DATA:async r=>{try{console.log("🔍 [DEBUG] ENCRYPT_DATA"),console.log("🔍 [DEBUG] payload",r);const{data:e}=r;if(!e)throw new Error("Data is required for encryption");return await S.encryptData(e)}catch(e){return console.error("Encryption error:",e),{data:{encrypted:"ERROR_ENCRYPT_DATA"},eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}}}},DECRYPT_DATA:async r=>{try{const{data:e}=r;return await S.decryptData(e)}catch(e){return console.error("Encryption error:",e),{data:{encrypted:"ERROR_DECRYPT_DATA"},eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}}}},LOG_STORAGE:async()=>g.logLocalStorage(),EXCHANGE_KEY:async r=>await te(r),CLEAR_SESSION:async r=>await ee(r),EXIT:async r=>ne(r),LOGIN_ANONYMOUS:async r=>await re(r)};async function se(r,e={}){const t=oe[r];if(!t)throw new Error(`Unknown action: ${r}`);return await t(e)}const ae="iframe-miniapp",I={MINIAPP_WEBVIEW:"MINIAPP_WEBVIEW",RESPONSE_SDK_WEB:"RESPONSE_SDK_WEB",MINIAPP_SDK:"MINIAPP_SDK",MINIAPP_BRIDGE:"MINIAPP_BRIDGE"};function A(r){const e=document.getElementById(ae);if(!(e!=null&&e.contentWindow)){console.error("❌ Cannot sendMessage – iframe not ready");return}e.contentWindow.postMessage(JSON.stringify(r),"*")}function ie(r,e){}window.addEventListener("message",r=>{try{console.log("🔍 [DEBUG] Received message from MINIAPP_WEBVIEW"),console.log("🔍 [DEBUG] event",r);const e=JSON.parse(r.data);e.event&&e.sender===I.MINIAPP_WEBVIEW&&(console.log("🔍 [DEBUG] Received message from MINIAPP_WEBVIEW"),le(e.event,e))}catch(e){console.error("❌ Error processing message:",e)}});let h=null;async function ce(r){console.log("🔍 [DEBUG] openMiniApp called with options:",r);const{environment:e,url:t,containerId:n="miniapp-container",initData:o}=r;g.setItem("MINIAPP_SDK_sdk_productMode",e);const a=new URLSearchParams(new URL(t).search).get("partner_link");a?console.log("🔍 [DEBUG] Extracted partnerLink from URL:",a):console.warn("⚠️ [DEBUG] No partner_link found in URL");const i=document.getElementById(n);if(!i)return console.log("❌ Container not found:",n),{data:null,eventStatus:{errorCode:"SDK001",errorMessageVN:"Container không tìm thấy",errorMessageEN:"Container not found"}};try{let c=null;if(o)console.log("🔍 [DEBUG] Processing init data from input"),c=await T(o,a);else{const l=g.getItem("MINIAPP_SDK_init_data");l?(c=JSON.parse(l),console.log("🔍 [DEBUG] Retrieved init data from storage")):(console.warn("⚠️ [DEBUG] No init data found, processing with default values"),c=await T({},a))}return g.setItem("MINIAPP_SDK_init_data",JSON.stringify(c)),console.log("🔍 [DEBUG] Saved init data to storage"),h&&(i.removeChild(h),console.log("🗑️ Removed old iframe")),h=document.createElement("iframe"),h.id="iframe-miniapp",h.src=t,h.style.width="100%",h.style.height="100%",h.style.border="none",i.appendChild(h),i.style.display="block",h.onload=()=>{console.log("🔍 [DEBUG] Iframe loaded, sending INIT event to MiniApp"),console.log("🔍 [DEBUG] Iframe origin:",h.src),console.log("🔍 [DEBUG] Iframe contentWindow:",h.contentWindow),setTimeout(()=>{try{console.log("🔍 [DEBUG] Sending message to iframe");const l={sender:"MINIAPP_SDK",event:"INIT",data:c,request_id:Date.now().toString()};console.log("🔍 [DEBUG] Sending message to iframe"),document.getElementById("iframe-miniapp").contentWindow.postMessage(JSON.stringify(l),"*"),console.log("✅ Sent INIT event to MiniApp")}catch(l){console.error("❌ Error sending INIT event to MiniApp:",l)}},1e3)},console.log("✅ MiniApp opened in iframe:",t),console.log("✅ Using init data"),{data:{url:t,containerId:n,initData:c},eventStatus:{errorCode:"SDK000",errorMessageVN:"Thành công",errorMessageEN:"Success"}}}catch(c){return console.error("❌ Error in openMiniApp:",c),{data:null,eventStatus:{errorCode:"SDK002",errorMessageVN:"Lỗi khi mở MiniApp",errorMessageEN:"Error opening MiniApp"}}}}async function T(r,e){console.log("🔍 [DEBUG] processInitData called"),r||(console.log("🔍 [DEBUG] Input data is null, using default values"),r={});const t=d.getDeviceInfo(),n=r==null?void 0:r.msisdn;console.log("🔍 [DEBUG] Calling Utils.generateClientId for processInitData");const o=await d.generateClientId(e);console.log("🔍 [DEBUG] Generated clientId for processInitData");const s={internal:{session:null,deviceInfo:{imei:o,platform:{os:t.os,osVersion:t.osVersion}}},external:{generalInfo:{msisdn:n},serviceInfo:{}}};return console.log("🔍 [DEBUG] Processed init data",s),s}async function le(r,e){console.log("🔍 [DEBUG] handleDataAction called with event:",r);try{const t=await se(r,{data:e.data});console.log("🔍 [DEBUG] callAction response received"),A({sender:I.MINIAPP_SDK,event:r,data:t.data,response_id:e.request_id,request_id:e.request_id,eventStatus:t.eventStatus})}catch(t){console.error("❌ Error in handleDataAction:",t),A({sender:I.MINIAPP_SDK,event:r,data:{error:!0,message:t.message}})}}u.getEnv=$,u.getEnvWhitelist=F,u.initSDK=X,u.onMessage=ie,u.openMiniApp=ce,u.sendMessage=A,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
